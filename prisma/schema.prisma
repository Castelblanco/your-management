// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Guide_Service {
  id                            String                @id @unique
  number                        BigInt                @unique @default(autoincrement())
  commodity                     Json[]
  price                         Float
  created_at                    DateTime
  updated_at                    DateTime
  collection                    Boolean
  status_id                     String
  status                        Guide_Service_Status  @relation(fields: [status_id], references: [id])
  novelty_id                    String                @unique
  novelty                       Guide_Service_Novelty @relation(fields: [novelty_id], references: [id])
  service_id                    String                @unique
  service                       Guide_Service_Type    @relation(fields: [service_id], references: [id])
  user_id                       String                @unique
  user                          Users                 @relation(fields: [user_id], references: [id])
  point_sale_origin_id          String                @unique
  point_sale_origin             Point_Sales           @relation("origin", fields: [point_sale_origin_id], references: [id])
  point_sale_destination_id     String                @unique
  point_sale_destination        Point_Sales           @relation("destination", fields: [point_sale_destination_id], references: [id])
  client_natural_origin_id      String?               @unique
  client_natural_origin         Natural_Client?       @relation("origin", fields: [client_natural_origin_id], references: [id])
  client_natural_destination_id String?               @unique
  client_natural_destination    Natural_Client?       @relation("destination", fields: [client_natural_destination_id], references: [id])
  client_legal_origin_id        String?               @unique
  client_legal_origin           Legal_Client?         @relation("origin", fields: [client_legal_origin_id], references: [id])
  client_legal_destination_id   String?               @unique
  client_legal_destination      Legal_Client?         @relation("destination", fields: [client_legal_destination_id], references: [id])
}

model Guide_Service_Novelty {
  id            String          @id @unique
  name          String
  guide_service Guide_Service[]
}

model Guide_Service_Type {
  id            String         @id @unique
  name          String         @unique
  tab           String
  guide_service Guide_Service?
}

model Guide_Service_Status {
  id            String          @id @unique
  name          String          @unique
  guide_service Guide_Service[]
}

model Natural_Client {
  id                         String          @id @unique
  number_movil               String          @unique
  address                    String          @unique
  document_id                String          @unique
  first_name                 String
  last_name                  String
  natural                    Boolean
  status_id                  String
  status                     Client_Status   @relation(fields: [status_id], references: [id])
  guides_service_origin      Guide_Service[] @relation("origin")
  guides_service_destination Guide_Service[] @relation("destination")
}

model Legal_Client {
  id                         String          @id @unique
  number_movil               String          @unique
  address                    String          @unique
  nit                        String          @unique
  business_name              String          @unique
  natural                    Boolean
  status_id                  String
  status                     Client_Status   @relation(fields: [status_id], references: [id])
  guides_service_origin      Guide_Service[] @relation("origin")
  guides_service_destination Guide_Service[] @relation("destination")
}

model Client_Status {
  id             String           @id @unique
  name           String           @unique
  natural_client Natural_Client[]
  legal_client   Legal_Client[]
}

model Users {
  id            String          @id @unique
  first_name    String
  last_name     String
  document_id   String          @unique
  email         String          @unique
  phone         String          @unique
  password      String
  address       String
  picture_url   String?
  picture_id    String?
  created_at    DateTime
  updated_at    DateTime
  status_id     String
  status        Users_Status    @relation(fields: [status_id], references: [id])
  point_sale_id String
  point_sale    Point_Sales     @relation(fields: [point_sale_id], references: [id])
  role_id       String
  role          Users_Roles     @relation(fields: [role_id], references: [id])
  guide_service Guide_Service[]
}

model Users_Status {
  id    String  @id @unique
  name  String
  Users Users[]
}

model Point_Sales {
  id                         String             @id @unique
  name                       String
  address                    String             @unique
  department                 String
  municipality               String
  neighborhood               String
  latitude                   Float
  longitude                  Float
  budget                     Float
  status_id                  String
  status                     Point_Sales_Status @relation(fields: [status_id], references: [id])
  users                      Users[]
  guides_service_origin      Guide_Service[]    @relation("origin")
  guides_service_destination Guide_Service[]    @relation("destination")
}

model Point_Sales_Status {
  id          String        @id @unique
  name        String        @unique
  point_sales Point_Sales[]
}

model Users_Roles {
  id    String  @id @unique
  name  String  @unique
  users Users[]
}
